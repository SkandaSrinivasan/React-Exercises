{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skanda\\\\Documents\\\\JavaScript\\\\React-Exercises\\\\React-Exercises\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const setGoodValue = value => {\n    setGood(value);\n  };\n\n  const setNeutralValue = value => {\n    setNeutral(value);\n  };\n\n  const setBadValue = value => {\n    setBad(value);\n  };\n\n  console.log(\"value of good\" + good);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: \"Unicafe feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {\n      feedbackCount: good,\n      handleClick: setGoodValue,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {\n      feedbackCount: bad,\n      handleClick: setBadValue,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {\n      feedbackCount: neutral,\n      handleClick: setNeutralValue,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayCount, {\n      value: good,\n      feedbackType: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayCount, {\n      value: bad,\n      feedbackType: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayCount, {\n      value: neutral,\n      feedbackType: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayTotal, {\n      goodCount: good,\n      badCount: bad,\n      neutralCount: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Header = ({\n  header\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: header\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 33\n}, this);\n\n_c2 = Header;\n\nconst FeedbackButton = ({\n  feedbackCount,\n  handleClick,\n  text\n}) => {\n  console.log(feedbackCount);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleClick(feedbackCount + 1),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_c3 = FeedbackButton;\n\nconst DisplayCount = ({\n  value,\n  feedbackType\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [feedbackType, \": \", value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 49\n}, this);\n\n_c4 = DisplayCount;\n\nconst DisplayTotal = ({\n  goodCount,\n  badCount,\n  neutralCount\n}) => \"Total FeedbackCount is\"(goodCount + badCount + neutralCount);\n\n_c5 = DisplayTotal;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FeedbackButton\");\n$RefreshReg$(_c4, \"DisplayCount\");\n$RefreshReg$(_c5, \"DisplayTotal\");","map":{"version":3,"sources":["C:/Users/Skanda/Documents/JavaScript/React-Exercises/React-Exercises/unicafe/src/App.js"],"names":["React","useState","App","good","setGood","neutral","setNeutral","bad","setBad","setGoodValue","value","setNeutralValue","setBadValue","console","log","Header","header","FeedbackButton","feedbackCount","handleClick","text","DisplayCount","feedbackType","DisplayTotal","goodCount","badCount","neutralCount"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react';\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const setGoodValue = (value) =>{\n    setGood(value);\n  }\n\n  const setNeutralValue = (value) =>{\n    setNeutral(value);\n  }\n\n  const setBadValue = (value) =>{\n    setBad(value);\n  }\n  console.log(\"value of good\" + good);\n  return (\n    <div >   \n      <Header header = \"Unicafe feedback\" />\n      <FeedbackButton feedbackCount={good} handleClick = {setGoodValue} text = \"good\" />\n      <FeedbackButton feedbackCount={bad} handleClick = {setBadValue} text = \"bad\" />\n      <FeedbackButton feedbackCount={neutral} handleClick = {setNeutralValue} text = \"Neutral\" />\n      <DisplayCount value = {good} feedbackType = \"good\" />\n      <DisplayCount value = {bad} feedbackType = \"bad\" />\n      <DisplayCount value = {neutral} feedbackType = \"neutral\" />\n      <DisplayTotal goodCount={good} badCount={bad} neutralCount={neutral} />\n    </div>\n  );\n}\n\n\nconst Header = ( {header} ) =>( <p>{header}</p> )\n\nconst FeedbackButton = ({feedbackCount, handleClick, text}) => {\n  console.log(feedbackCount)\n    return (<button onClick = {() => handleClick(feedbackCount+1)}>{text}</button>)\n}\n\nconst DisplayCount = ({value,feedbackType}) => (<p>{feedbackType}: {value}</p>)\n\nconst DisplayTotal = ({goodCount ,badCount, neutralCount}) => (\"Total FeedbackCount is\" (goodCount+badCount+neutralCount))\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}