{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skanda\\\\Documents\\\\JavaScript\\\\React-Exercises\\\\React-Exercises\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const setGoodValue = value => {\n    setGood(value);\n  };\n\n  const setNeutralValue = value => {\n    setNeutral(value);\n  };\n\n  const setBadValue = value => {\n    setBad(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: \"Unicafe feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {\n      feedbackCount: good,\n      handleClick: setGoodValue,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {\n      feedbackCount: bad,\n      handleClick: setBadValue,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {\n      feedbackCount: neutral,\n      handleClick: setNeutralValue,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DisplayCount, {\n          value: good,\n          feedbackType: \"good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DisplayCount, {\n        value: bad,\n        feedbackType: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayCount, {\n        value: neutral,\n        feedbackType: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisplayTotal, {\n        goodCount: good,\n        badCount: bad,\n        neutralCount: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisplayAverage, {\n        goodCount: good,\n        badCount: bad,\n        totalCount: good + bad + neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisplayPositivePercentage, {\n        goodCount: good,\n        totalCount: good + bad + neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Header = ({\n  header\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: header\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 33\n}, this);\n\n_c2 = Header;\n\nconst FeedbackButton = ({\n  feedbackCount,\n  handleClick,\n  text\n}) => {\n  console.log(feedbackCount);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleClick(feedbackCount + 1),\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this);\n};\n\n_c3 = FeedbackButton;\n\nconst DisplayCount = ({\n  value,\n  feedbackType\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [feedbackType, \": \", value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 52\n}, this);\n\n_c4 = DisplayCount;\n\nconst DisplayTotal = ({\n  goodCount,\n  badCount,\n  neutralCount\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Total feedbackCount is : \", goodCount + badCount + neutralCount]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 66\n}, this);\n\n_c5 = DisplayTotal;\n\nconst DisplayAverage = ({\n  goodCount,\n  badCount,\n  totalCount\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Average Feedback is: \", (goodCount - badCount) / totalCount]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 66\n}, this);\n\n_c6 = DisplayAverage;\n\nconst DisplayPositivePercentage = ({\n  goodCount,\n  totalCount\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"Positive Percentage is: \", goodCount / totalCount * 100, \" %\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 67\n}, this);\n\n_c7 = DisplayPositivePercentage;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FeedbackButton\");\n$RefreshReg$(_c4, \"DisplayCount\");\n$RefreshReg$(_c5, \"DisplayTotal\");\n$RefreshReg$(_c6, \"DisplayAverage\");\n$RefreshReg$(_c7, \"DisplayPositivePercentage\");","map":{"version":3,"sources":["C:/Users/Skanda/Documents/JavaScript/React-Exercises/React-Exercises/unicafe/src/App.js"],"names":["React","useState","App","good","setGood","neutral","setNeutral","bad","setBad","setGoodValue","value","setNeutralValue","setBadValue","Header","header","FeedbackButton","feedbackCount","handleClick","text","console","log","DisplayCount","feedbackType","DisplayTotal","goodCount","badCount","neutralCount","DisplayAverage","totalCount","DisplayPositivePercentage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const setGoodValue = (value) => {\n    setGood(value);\n  }\n\n  const setNeutralValue = (value) => {\n    setNeutral(value);\n  }\n\n  const setBadValue = (value) => {\n    setBad(value);\n  }\n  return (\n    <div >\n      <Header header=\"Unicafe feedback\" />\n      <FeedbackButton feedbackCount={good} handleClick={setGoodValue} text=\"good\" />\n      <FeedbackButton feedbackCount={bad} handleClick={setBadValue} text=\"bad\" />\n      <FeedbackButton feedbackCount={neutral} handleClick={setNeutralValue} text=\"Neutral\" />\n\n      <table>\n      <tr> <DisplayCount value={good} feedbackType=\"good\" /> </tr>\n        <DisplayCount value={bad} feedbackType=\"bad\" />  \n          <DisplayCount value={neutral} feedbackType=\"neutral\" />\n          <DisplayTotal goodCount={good} badCount={bad} neutralCount={neutral} />\n          <DisplayAverage goodCount={good} badCount={bad} totalCount={good + bad + neutral} />\n          <DisplayPositivePercentage goodCount={good} totalCount={good + bad + neutral} />\n        \n      </table>\n\n\n    </div>\n  );\n}\n\n\nconst Header = ({ header }) => (<p>{header}</p>)\n\nconst FeedbackButton = ({ feedbackCount, handleClick, text }) => {\n  console.log(feedbackCount)\n  return (<button onClick={() => handleClick(feedbackCount + 1)}>{text}</button>)\n}\n\nconst DisplayCount = ({ value, feedbackType }) => (<p>{feedbackType}: {value}</p>)\n\nconst DisplayTotal = ({ goodCount, badCount, neutralCount }) => (<p>Total feedbackCount is : {goodCount + badCount + neutralCount}</p>);\n\nconst DisplayAverage = ({ goodCount, badCount, totalCount }) => (<p>Average Feedback is: {(goodCount - badCount) / totalCount}</p>)\n\nconst DisplayPositivePercentage = ({ goodCount, totalCount }) => (<p>Positive Percentage is: {(goodCount / totalCount) * 100} %</p>)\nexport default App;\n"]},"metadata":{},"sourceType":"module"}